{"version":3,"file":"view_compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_compiler.ts"],"names":[],"mappings":";AAAA,qBAAyB,eAAe,CAAC,CAAA;AAEzC,gCAA6B,mBAAmB,CAAC,CAAA;AACjD,6BAA0B,gBAAgB,CAAC,CAAA;AAC3C,6BAA2D,gBAAgB,CAAC,CAAA;AAC5E,4BAAuB,eAAe,CAAC,CAAA;AAGvC,uBAA6B,WAAW,CAAC,CAAA;AAEzC,mCAAgC,iCAAiC,CAAC,CAAA;AAElE;IACE,2BAAmB,UAAyB,EAAS,cAAsB,EACxD,YAAqC;QADrC,eAAU,GAAV,UAAU,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAQ;QACxD,iBAAY,GAAZ,YAAY,CAAyB;IAAG,CAAC;IAC9D,wBAAC;AAAD,CAAC,AAHD,IAGC;AAHY,yBAAiB,oBAG7B,CAAA;AACD;IAEE,sBAAoB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;QADtC,uBAAkB,GAAG,IAAI,sCAAiB,EAAE,CAAC;IACJ,CAAC;IAElD,uCAAgB,GAAhB,UAAiB,SAAmC,EAAE,QAAuB,EAC5D,MAAoB,EAAE,KAA4B;QACjE,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,UAAU,GAAG,kBAAkB,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,WAAW,EAAjB,CAAiB,CAAC,CAAC;QACpE,IAAI,IAAI,GAAG,IAAI,0BAAW,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,EAChE,gCAAc,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,wBAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QACxC,gEAAgE;QAChE,iDAAiD;QACjD,sBAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACzB,yBAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE7B,MAAM,CAAC,IAAI,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACK,2BAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,uBAAc,GAAG;KACvB,CAAC;IACF,mBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,oBAAY,eAyBxB,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport * as o from '../output/output_ast';\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {buildView, finishView, ViewCompileDependency} from './view_builder';\nimport {bindView} from './view_binder';\nimport {CompileDirectiveMetadata, CompilePipeMetadata} from '../compile_metadata';\nimport {TemplateAst} from '../template_ast';\nimport {CompilerConfig} from '../config';\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\n\nexport class ViewCompileResult {\n  constructor(public statements: o.Statement[], public viewFactoryVar: string,\n              public dependencies: ViewCompileDependency[]) {}\n}\nexport class ViewCompiler {\n  private _animationCompiler = new AnimationCompiler();\n  constructor(private _genConfig: CompilerConfig) {}\n\n  compileComponent(component: CompileDirectiveMetadata, template: TemplateAst[],\n                   styles: o.Expression, pipes: CompilePipeMetadata[]): ViewCompileResult {\n    var dependencies = [];\n    var compiledAnimations = this._animationCompiler.compileComponent(component);\n    var statements = compiledAnimations.map(entry => entry.fnStatement);\n    var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0,\n                               CompileElement.createNull(), []);\n    buildView(view, template, dependencies);\n    // Need to separate binding from creation to be able to refer to\n    // variables that have been declared after usage.\n    bindView(view, template);\n    finishView(view, statements);\n\n    return new ViewCompileResult(statements, view.viewFactory.name, dependencies);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: CompilerConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}