{"version":3,"file":"web_animations_player.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/web_animations_player.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAC,MAAM,gBAAgB;AAIxC;IAKE,YAAoB,OAAyB,EAAS,SAAiB;QAAnD,YAAO,GAAP,OAAO,CAAkB;QAAS,cAAS,GAAT,SAAS,CAAQ;QAJ/D,mBAAc,GAAe,EAAE,CAAC;QAChC,cAAS,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAoB,IAAI,CAAC;QAG1C,gEAAgE;QAChE,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAEO,SAAS;QACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,EAAY,IAAU,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE5D,IAAI,KAAW,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAErC,KAAK,KAAW,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAEvC,MAAM,KAAW,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAEzC,KAAK,KAAW,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAExC,OAAO;QACL,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,OAAO;QACL,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IAChD,CAAC;IAED,WAAW;QACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;IACnD,CAAC;AACH,CAAC;AAAA","sourcesContent":["import {isPresent} from '../facade/lang';\nimport {AnimationPlayer} from '../../core_private';\nimport {DomAnimatePlayer} from './dom_animate_player';\n\nexport class WebAnimationsPlayer implements AnimationPlayer {\n  private _subscriptions: Function[] = [];\n  private _finished = false;\n  public parentPlayer: AnimationPlayer = null;\n\n  constructor(private _player: DomAnimatePlayer, public totalTime: number) {\n    // this is required to make the player startable at a later time\n    this.reset();\n    this._player.onfinish = () => this._onFinish();\n  }\n\n  private _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      if (!isPresent(this.parentPlayer)) {\n        this.destroy();\n      }\n      this._subscriptions.forEach(fn => fn());\n      this._subscriptions = [];\n    }\n  }\n\n  onDone(fn: Function): void { this._subscriptions.push(fn); }\n\n  play(): void { this._player.play(); }\n\n  pause(): void { this._player.pause(); }\n\n  finish(): void { this._player.finish(); }\n\n  reset(): void { this._player.cancel(); }\n\n  restart(): void {\n    this.reset();\n    this.play();\n  }\n\n  destroy(): void {\n    this.reset();\n    this._onFinish();\n  }\n\n  setPosition(p): void {\n    this._player.currentTime = p * this.totalTime;\n  }\n\n  getPosition(): number {\n    return this._player.currentTime / this.totalTime;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}