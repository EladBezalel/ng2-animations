{"version":3,"file":"mock_animation_player.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/testing/animation/mock_animation_player.ts"],"names":[],"mappings":";AAAA,qBAAwB,uBAAuB,CAAC,CAAA;AAGhD;IAAA;QACU,mBAAc,GAAG,EAAE,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAoB,IAAI,CAAC;QAErC,QAAG,GAAG,EAAE,CAAC;IAqClB,CAAC;IAnCS,uCAAS,GAAjB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAExB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,KAAK,IAAO,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,EAAE,CAAC,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IAED,oCAAM,GAAN,UAAO,EAAY,IAAU,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE5D,kCAAI,GAAJ,cAAe,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAEvC,mCAAK,GAAL,cAAgB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEzC,qCAAO,GAAP,cAAkB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAE7C,oCAAM,GAAN,cAAiB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAEpC,mCAAK,GAAL,cAAgB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEzC,qCAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,CAAC,IAAS,CAAC;IACvB,yCAAW,GAAX,cAAwB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,0BAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,2BAAmB,sBA2C/B,CAAA","sourcesContent":["import {isPresent} from '../../src/facade/lang';\nimport {AnimationPlayer} from '../../src/animation/animation_player';\n\nexport class MockAnimationPlayer implements AnimationPlayer {\n  private _subscriptions = [];\n  private _finished = false;\n  private _destroyed = false;\n  public parentPlayer: AnimationPlayer = null;\n\n  public log = [];\n\n  private _onfinish(): void {\n    if (!this._finished) {\n      this._finished = true;\n      this.log.push('finish');\n\n      this._subscriptions.forEach((entry) => { entry(); });\n      this._subscriptions = [];\n      if (!isPresent(this.parentPlayer)) {\n        this.destroy();\n      }\n    }\n  }\n\n  onDone(fn: Function): void { this._subscriptions.push(fn); }\n\n  play(): void { this.log.push('play'); }\n\n  pause(): void { this.log.push('pause'); }\n\n  restart(): void { this.log.push('restart'); }\n\n  finish(): void { this._onfinish(); }\n\n  reset(): void { this.log.push('reset'); }\n\n  destroy(): void {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this.finish();\n      this.log.push('destroy');\n    }\n  }\n\n  setPosition(p): void {}\n  getPosition(): number { return 0; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}